plugins {
    id 'java-library'
}

dependencies {
    //api 'org.springframework.boot:spring-boot-starter-data-jpa'
    /*
        api는 다른 모듈에서 이 라이브러리를 사용할때(직접적으로) 적용
        두번 컴파일 되므로 없는게 의존성 낮추는 가장 좋은 방법
     */
    implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
    runtimeOnly 'com.h2database:h2'

    implementation group: 'com.mysql', name: 'mysql-connector-j'
      // Querydsl
    implementation 'com.querydsl:querydsl-jpa'
    implementation 'com.querydsl:querydsl-core'

     // Querydsl JPAAnnotationProcessor 사용 지정
    annotationProcessor "com.querydsl:querydsl-apt:${dependencyManagement.importedProperties['querydsl.version']}:jpa"
    annotationProcessor("jakarta.persistence:jakarta.persistence-api") // java.lang.NoClassDefFoundError(javax.annotation.Entity) 발생 대응
    annotationProcessor("jakarta.annotation:jakarta.annotation-api") // java.lang.NoClassDefFoundError (javax.annotation.Generated) 발생 대응
}

clean {
    delete file('src/main/generated') // IntelliJ Annotation processor 생성물 생성 위치
}

